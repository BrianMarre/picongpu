/* Copyright 2023 Brian Marre
 *
 * This file is part of PIConGPU.
 *
 * PIConGPU is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * PIConGPU is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with PIConGPU.
 * If not, see <http://www.gnu.org/licenses/>.
 */

/** @file provides def of T_PositionFunctor that places numParticlesPerSuperCell macro particles at a
 *  fixed location in each super cell with weighting according to the local density
 */

#pragma once

#include "picongpu/simulation_defines.hpp"

#include "picongpu/particles/startPosition/generic/Free.def"

namespace picongpu::particles::startPosition
{
    namespace acc
    {
        /** set the particle attribute position
         *
         * This functor also sets the macro particle weighting.
         */
        template<typename T_ParamClass>
        struct OneSuperCellPositionImpl;
    } // namespace acc

    /** Set the in cell position
     *
     * All macro particles are set to the same in cell position defined in
     * T_ParamClass.
     *
     * @tparam T_ParamClass Parameter class with off `InCellOffset` defined as
     *   CONST_VECTOR of 3 float_X [0.0, 1.0) and numParticlesPerSuperCell: static constexpr uint32_t
     */
    template<typename T_ParamClass>
    using OneSuperCellPositionImpl = generic::Free<acc::OneSuperCellPositionImpl<T_ParamClass>>;

} // namespace picongpu::particles::startPosition
